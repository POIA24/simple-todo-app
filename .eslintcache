[{"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\index.js":"1","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\App.js":"2","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\reportWebVitals.js":"3","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\atoms.js":"4","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoCreator.js":"5","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoItem.js":"6","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoListFilters.js":"7","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoListStats.js":"8"},{"size":564,"mtime":1611441189840,"results":"9","hashOfConfig":"10"},{"size":2613,"mtime":1611609868401,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1595,"mtime":1611594497311,"results":"13","hashOfConfig":"10"},{"size":1910,"mtime":1611609618826,"results":"14","hashOfConfig":"10"},{"size":2467,"mtime":1611608469521,"results":"15","hashOfConfig":"10"},{"size":1169,"mtime":1611608582100,"results":"16","hashOfConfig":"10"},{"size":768,"mtime":1611593758625,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"er8gat",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\index.js",[],["38","39"],"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\App.js",["40"],"import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { todoListState, filteredTodoListState } from \"./atoms\"; //you must import your atoms for calling\nimport axios from \"axios\";\nimport FlipMove from \"react-flip-move\";\n\n//components\nimport TodoCreator from \"./components/TodoCreator\";\nimport TodoItem from \"./components/TodoItem\";\nimport TodoListFilters from \"./components/TodoListFilters\";\nimport TodoListStats from \"./components/TodoListStats\";\n\nimport { IconButton } from \"@material-ui/core\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nfunction App() {\n\tconst [quote, setQuote] = useState({ text: \"Loading...\" });\n\tconst todoListSorted = useRecoilValue(filteredTodoListState); //get the value from the recoil state, useRecoilValue can only read variables that's why the todoList below is imported\n\tconst setTodoList = useSetRecoilState(todoListState); // get the value from the recoil state, useSetRecoilState can only set variables\n\n\tuseEffect(() => {\n\t\tconst max = 1643; //max index of the array who come back from the api\n\t\tconst randomNumber = Math.floor(Math.random() * (max - 0) + 0);\n\n\t\t//fetching the quote from the api\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\"https://type.fit/api/quotes\");\n\t\t\t\tsetQuote(response.data[randomNumber]);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t})();\n\n\t\t//check if the local storage has got something inside, if yes, set the todoList state with those value\n\t\tconst localTodos = JSON.parse(localStorage.getItem(\"todoListStorage\"));\n\t\tif (localTodos) setTodoList([...localTodos]);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<h1 className=\"app__quote\">\n\t\t\t\t{quote.text}\n\t\t\t\t<br />\n\t\t\t\t<span className=\"app__quote-sub\">{quote.author}</span>\n\t\t\t</h1>\n\n\t\t\t<TodoListStats />\n\t\t\t<TodoListFilters />\n\t\t\t<TodoCreator />\n\n\t\t\t<div className=\"app__todoList\">\n\t\t\t\t<FlipMove>\n\t\t\t\t\t{todoListSorted.map((todoItem) => (\n\t\t\t\t\t\t<TodoItem key={todoItem.id} item={todoItem} />\n\t\t\t\t\t))}\n\t\t\t\t</FlipMove>\n\t\t\t</div>\n\n\t\t\t<div className=\"app__aboutMe\">\n\t\t\t\t<IconButton target=\"blank\" href=\"https://github.com/deSimons\">\n\t\t\t\t\t<GitHubIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton target=\"blank\" href=\"https://www.instagram.com/de_simons/\">\n\t\t\t\t\t<InstagramIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton\n\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\thref=\"https://www.linkedin.com/in/luca-de-simoni/\"\n\t\t\t\t>\n\t\t\t\t\t<LinkedInIcon />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\reportWebVitals.js",[],"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\atoms.js",[],"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoCreator.js",[],["41","42"],"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoItem.js",[],"C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoListFilters.js",["43"],"import \"./TodoListFilters.css\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { todoListFilterState } from \"../atoms\"; //you must import your variables for calling\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nimport AssignmentLateRoundedIcon from \"@material-ui/icons/AssignmentLateRounded\";\r\nimport AssignmentTurnedInRoundedIcon from \"@material-ui/icons/AssignmentTurnedInRounded\";\r\nimport AssignmentRoundedIcon from \"@material-ui/icons/AssignmentRounded\";\r\n\r\nconst TodoListFilters = () => {\r\n\tconst [filter, setFilter] = useRecoilState(todoListFilterState);\r\n\r\n\t// { target: { value } } ➡➡ e.target.value\r\n\tconst updateFilter = ({ target: { value } }) => {\r\n\t\tsetFilter(value); // update the filter\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"todoListFilters\">\r\n\t\t\t<IconButton value=\"Show All\" onClick={updateFilter}>\r\n\t\t\t\t<AssignmentRoundedIcon />\r\n\t\t\t</IconButton>\r\n\t\t\t<IconButton value=\"Show Uncompleted\" onClick={updateFilter}>\r\n\t\t\t\t<AssignmentLateRoundedIcon />\r\n\t\t\t</IconButton>\r\n\t\t\t<IconButton value=\"Show Completed\" onClick={updateFilter}>\r\n\t\t\t\t<AssignmentTurnedInRoundedIcon />\r\n\t\t\t</IconButton>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoListFilters;\r\n","C:\\Users\\yoghi\\Desktop\\Projects\\todo-app-exercise\\src\\components\\TodoListStats.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":41,"column":5,"nodeType":"50","endLine":41,"endColumn":7,"suggestions":"51"},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":11,"column":9,"nodeType":"56","messageId":"57","endLine":11,"endColumn":15},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTodoList'. Either include it or remove the dependency array.","ArrayExpression",["60"],["58"],["59"],"no-unused-vars","'filter' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [setTodoList]",{"range":"63","text":"64"},[1761,1763],"[setTodoList]"]